#!/usr/bin/make -f
#export DH_VERBOSE=1

# [ Maintainer Notes ]
#
# Unlike the nvidia-cuda-toolkit packaging, I wouldn't like to maintain a
# pile of *.install files. Here all the *.install files are auto-generated
# from python script debian/control.py .
#
# If you have more than 16GB RAM, try build this package under /dev/shm.

# These variables are used as memo.
MKL_ORIG_TARBALL = l_mkl_2018.2.199.tgz
MD5SUM           = fd31b656a8eb859c89495b9cc41230b4
SHA256SUM        = e28d12173bef9e615b0ded2f95f59a42b3e9ad0afa713a79f8801da2bfb31936

# debugging i386 builds on amd64. [not formal cross build but dirty hack]
#export DEB_HOST_ARCH = i386
#export DEB_HOST_MULTIARCH = i386-linux-gnu


%:
	dh $@

extract-rpms:
	#https://www.centos.org/docs/5/html/Deployment_Guide-en-US/s1-check-rpm-sig.html
	set -e; for rpmfile in $$(find rpm -type f -name '*.rpm'); do \
		rpm -K --nosignature $$rpmfile; \
		rpm2cpio $$rpmfile | cpio -idmv; \
		done

autogen:
	find debian -type f -name '*.in' \! -name 'POTFILES.in' -exec \
		python3 debian/placeholder.py '{}' \;
	chmod +x debian/libmkl-rt.postinst
	chmod +x debian/libmkl-rt.prerm

override_dh_auto_configure: extract-rpms autogen
	python3 debian/control.py  # Generate install files and lintian overrides

	# deal with embedded libjs-jquery
	$(RM) opt/intel/documentation_2018/ja/mkl/ps2018/resources/jquery-1.11.1.min.js
	$(RM) opt/intel/documentation_2018/en/mkl/ps2018/resources/jquery-1.11.1.min.js
	ln -s /usr/share/javascript/jquery/jquery.min.js \
		opt/intel/documentation_2018/ja/mkl/ps2018/resources/jquery-1.11.1.min.js
	ln -s /usr/share/javascript/jquery/jquery.min.js \
		opt/intel/documentation_2018/en/mkl/ps2018/resources/jquery-1.11.1.min.js

override_dh_auto_clean:
	debconf-updatepo
	-$(RM) debian/*.install  # auto-generated install files
	-$(RM) debian/*.lintian-overrides  # auto-generated lintian files
	-$(RM) debian/*.postinst debian/*.prerm  # auto-gen maintainer scripts
	-$(RM) -rf debian/__pycache__
	-$(RM) -rf opt  # extracted from upstream rpm packages

# don't strip any of these binary blobs as agreed in intel's license.
override_dh_strip:
override_dh_strip_nondeterminism:
	true
